AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template for creating a VPC with public and private subnets, NAT Gateway, and EC2 instances.'

Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: CFT_VPC

  # Public Subnet
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CFT_VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CFT_Pub_SN

  # Private Subnet
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CFT_VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CFT_Pvt_SN

  # Internet Gateway
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CFT_IGW

  # Attach Internet Gateway to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref CFT_VPC
      InternetGatewayId: !Ref CFT_IGW

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CFT_VPC
      Tags:
        - Key: Name
          Value: CFT_Pub_RT

  # Route to Internet in Public Route Table
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref CFT_Pub_RT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref CFT_IGW

  # Associate Public Route Table with Public Subnet
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CFT_Pub_SN
      RouteTableId: !Ref CFT_Pub_RT

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CFT_VPC
      Tags:
        - Key: Name
          Value: CFT_Pvt_RT

  # NAT Gateway Elastic IP
  NatEIP:
    Type: AWS::EC2::EIP
    Properties: {}

  # NAT Gateway
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEIP.AllocationId
      SubnetId: !Ref CFT_Pub_SN
      Tags:
        - Key: Name
          Value: CFT_NGW

  # Route for Private Route Table to use NAT Gateway
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref CFT_Pvt_RT
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref CFT_NGW

  # Associate Private Route Table with Private Subnet
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CFT_Pvt_SN
      RouteTableId: !Ref CFT_Pvt_RT

  # Security Group for Public EC2
  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH and HTTP traffic to the public instance"
      VpcId: !Ref CFT_VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # SSH access
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # HTTP access
      Tags:
        - Key: Name
          Value: CFT_SG

  # Security Group for Private EC2
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH access to the private instance from public instance"
      VpcId: !Ref CFT_VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref CFT_SG  # Allow SSH from public instance
      Tags:
        - Key: Name
          Value: CFT_Pvt_SG

  # EC2 Instance in Public Subnet
  PublicEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro  # Change instance type as needed
      KeyName: T15  # Replace with your key pair name
      ImageId: ami-047126e50991d067b  # Replace with a valid AMI ID for your region
      SubnetId: !Ref CFT_Pub_SN
      SecurityGroupIds:
        - !Ref CFT_SG
      Tags:
        - Key: Name
          Value: WebServer

  # EC2 Instance in Private Subnet
  PrivateEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro  # Change instance type as needed
      KeyName: T15  # Replace with your key pair name
      ImageId: ami-047126e50991d067b  # Replace with a valid AMI ID for your region
      SubnetId: !Ref CFT_Pvt_SN
      SecurityGroupIds:
        - !Ref CFT_Pvt_SG
      Tags:
        - Key: Name
          Value: AppServer

Outputs:
  VPCId:
    Description: "VPC ID"
    Value: !Ref CFT_VPC

  PublicSubnet1Id:
    Description: "Public Subnet ID"
    Value: !Ref CFT_Pub_SN

  PrivateSubnet1Id:
    Description: "Private Subnet ID"
    Value: !Ref CFT_Pvt_SN

  InternetGatewayId:
    Description: "Internet Gateway ID"
    Value: !Ref CFT_IGW

  NatGatewayId:
    Description: "NAT Gateway ID"
    Value: !Ref CFT_NGW

  PublicEC2InstanceId:
    Description: "Public EC2 Instance ID"
    Value: !Ref WebServer

  PrivateEC2InstanceId:
    Description: "Private EC2 Instance ID"
    Value: !Ref AppServer
